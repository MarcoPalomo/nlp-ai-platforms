# ===========================================
# NLP API Configuration
# ===========================================

replicaCount: 2

image:
  repository: your-dockerhub-user/nlp-api
  tag: "v1.0.0"  # Use semantic tags and avoid "latest"
  pullPolicy: IfNotPresent
  # pullSecrets: []  # only if you use a private registry

deployment:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  
  annotations: {}
  
  labels: {}

service:
  type: ClusterIP
  port: 8000
  targetPort: 8000
  # nodePort: 30080  # If you use NodePort
  annotations: {}

resources:
  limits:
    cpu: 1000m      # Increase for FastAPI + ML workloads
    memory: 1Gi     # Increase for ML models
  requests:
    cpu: 500m       # Increase for stable performance
    memory: 512Mi   # Increase to avoid OOM

# hpa
autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80
  # behavior:  # For a finer control of scaling
  #   scaleDown:
  #     stabilizationWindowSeconds: 300
  #   scaleUp:
  #     stabilizationWindowSeconds: 60

# Health checks
healthChecks:
  livenessProbe:
    httpGet:
      path: /health
      port: 8000
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1
  
  readinessProbe:
    httpGet:
      path: /health
      port: 8000
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 3
    failureThreshold: 3
    successThreshold: 1

env:
  - name: ENV
    value: "production"
  - name: LOG_LEVEL
    value: "INFO"
  - name: API_HOST
    value: "0.0.0.0"
  - name: API_PORT
    value: "8000"
  - name: WORKERS
    value: "4"
  - name: TORCHSERVE_URL
    value: "http://torchserve-service:8080"
  - name: MISTRAL_URL
    value: "http://mistral-server-service:8001"

envFrom:
  - configMapRef:
      name: nlp-api-config
  - secretRef:
      name: nlp-api-secrets

securityContext:
  # Pod security context
  fsGroup: 1000
  runAsNonRoot: true
  runAsUser: 1000
  
  # Container security context
  container:
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: 1000
    capabilities:
      drop:
        - ALL

# logs and cache volumes
volumes:
  - name: tmp-volume
    emptyDir: {}
  - name: cache-volume
    emptyDir: {}

volumeMounts:
  - name: tmp-volume
    mountPath: /tmp
  - name: cache-volume
    mountPath: /app/cache

networkPolicy:
  enabled: false 
  # ingress: []
  # egress: []

podDisruptionBudget:
  enabled: true
  minAvailable: 1
  # maxUnavailable: 1

affinity:
  # Antiaffinity to distribute pods on different nodes
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                  - nlp-api
          topologyKey: kubernetes.io/hostname

tolerations: []
  # - key: "ml-workload"
  #   operator: "Equal"
  #   value: "true"
  #   effect: "NoSchedule"

nodeSelector: {}
  # ml-optimized: "true"

# Monitoring
monitoring:
  enabled: true
  serviceMonitor:
    enabled: true
    namespace: monitoring
    interval: 30s
    path: /metrics
  
  # Annotations Prometheus
  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8000"
    prometheus.io/path: "/metrics"

# ingress
ingress:
  enabled: false
  className: "nginx"
  annotations: {}
    # nginx.ingress.kubernetes.io/rewrite-target: /
    # cert-manager.io/cluster-issuer: "letsencrypt-prod"
  hosts:
    - host: api.your-domain.com
      paths:
        - path: /
          pathType: Prefix
  tls: []
    # - secretName: api-tls
    #   hosts:
    #     - api.your-domain.com

# deployment tests
tests:
  enabled: true
  image:
    repository: curlimages/curl
    tag: latest
  

# production Configuration 
global:
  environment: production
  cluster: main
  namespace: "nlp-platform"
  region: eu-west-1

# Dans votre values.yaml, ajoutez :
config:
  enabled: true
  data:
    LOG_LEVEL: "INFO"
    ENVIRONMENT: "production"

secrets:
  enabled: true
  data:
    DATABASE_PASSWORD: "mon-secret"
    API_KEY: "mon-api-key"

  